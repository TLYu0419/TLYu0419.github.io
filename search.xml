<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>爬蟲 - 爬取SongGuo購物商品資訊</title>
      <link href="/2019/04/07/Crawl-SongGuo/"/>
      <url>/2019/04/07/Crawl-SongGuo/</url>
      <content type="html"><![CDATA[<p><em>本文章僅限於學習目的使用，請勿用於商業目的</em></p><p><a href="https://www.pcone.com.tw/" target="_blank" rel="noopener">SongGuo</a>購物是台灣新創的電商，截至2019年1月為止，平台上有超過3,600間廠商進駐，商品數量也超過15萬件。<br>我很喜歡創辦人分享以下兩篇創業歷程的文章。有興趣的人從以下文章了解更多松果購物的故事。</p><ul><li><a href="http://tesa.today/article/1629" target="_blank" rel="noopener">松果的創業故事-第1年</a></li><li><a href="https://tesa.today/article/1909" target="_blank" rel="noopener">松果的創業故事-第2年</a></li></ul><p>在這篇文章中，我們要透過python把SongGuo上的商品資料爬下來！</p><a id="more"></a><p><em>再強調一次，請勿用於商業目的。</em><br>這邊文章的架構如下</p><ul><li>找出「男生服飾」下所有的商品連結<br>選擇「男生服飾」的原因是這類型的商品數量較少，我們在抓資料比較不會造成系統負擔。若想抓其他類型商品的人可以自行調整類型的代號</li><li>從商品連結抓出店家/商品的資訊<br>包括店家名稱 / 店家評價 / 商品名稱 / 商品銷售量…等等。具體項目會在後面提及。</li><li>轉換成抓取變動目標的語法<br>將以上抓資料的過程撰寫成簡單的函數，讓我們可以輸入類型的代號，就抓出該類型下的所有商品資訊</li></ul><p>那我們就開始吧！</p><h1>找出「男生服飾」下所有的商品連結</h1><p>我們要練習的是SongGuo上男生服飾類型，這是網頁畫面。若想要練習其他類型的商品，可以自行修改網址中最後的3碼數字。<br><img src="/2019/04/07/Crawl-SongGuo/01.JPG" alt="01"></p><p>首先我們需要載入使用到的相關套件<br><img src="/2019/04/07/Crawl-SongGuo/02.JPG" alt="02"></p><p>設定待爬網頁的網址，與使用者資訊<br><img src="/2019/04/07/Crawl-SongGuo/03.JPG" alt="03"></p><blockquote><p>需要注意的是，若沒有輸入使用者資訊，很容易被系統偵測為爬蟲系統，進而阻止後續的爬蟲作業。因此這裡需要加入這些資訊，藉以模擬真實的瀏覽網頁情境。</p></blockquote><p>接著我們可以透過這段語法找出網頁上所有商品的連結<br><img src="/2019/04/07/Crawl-SongGuo/04.JPG" alt="04"></p><blockquote><p>需要留意的是，透過輸入’a.product-list-item’的方式找出商品連結只限於用載SongGuo的網站。如果想要在其他網站爬資料，則需要檢視個別網站的網站結構。<br>具體的方法是</p><ol><li>透過Chrome網頁開啟目標網站，並在網頁中點選「滑鼠右鍵」的「檢查」功能。</li><li>Ctrl + Shift + I<br>畫面如下<br><img src="/2019/04/07/Crawl-SongGuo/05.JPG" alt="05"></li></ol></blockquote><p>從以上的畫面我們就可以看到，商品的連結就藏在各個Element的href屬性中囉！</p><h1>從商品連結抓出店家/商品的資訊</h1><p>我從中挑選第一個商品連結(/product/info/190117048588)作為範例，商品項目是<a href="https://www.pcone.com.tw/product/info/190117048588" target="_blank" rel="noopener">【瑞典】旅行折疊電熱水壺</a>，網頁畫面如下<br><img src="/2019/04/07/Crawl-SongGuo/06.JPG" alt="06"><br>這個網頁中有相當豐富的資訊，包括店家名稱、店家評價、商品名稱、商品價格…等等<br>我將從網頁中提取出以下項目的資訊</p><ul><li>店家名稱</li><li>店家商品數量</li><li>店家評價</li><li>店家出貨天數</li><li>店家回覆率</li><li>產品名稱</li><li>特價</li><li>原價</li><li>折數</li><li>商品評分</li><li>評價人數</li><li>收藏人數</li><li>提問人數</li><li>商品分類</li><li>商品標籤</li><li>連結</li></ul><p>找出資訊藏在哪個Element與屬性的方法同樣是透過Chrome中的「檢查」功能，以商品名稱作為範例的畫面如下：<br><img src="/2019/04/07/Crawl-SongGuo/07.JPG" alt="07"><br>這邊是找出以上項目的程式代碼<br><img src="/2019/04/07/Crawl-SongGuo/08.JPG" alt="08"><br><img src="/2019/04/07/Crawl-SongGuo/09.JPG" alt="09"></p><blockquote><p>其實客戶的留言也是相當重要的資訊，但礙於篇幅這裡就不多做說明，找出節點與屬性的方法是相同的，有興趣的人可以自行練習。</p></blockquote><p>透過以上的方式，我們確認用程式把商品的資料抓出來是沒問題的！接下來我們只需要把抓取「固定」目標程式語法轉換成「變動」的代號，我們就能自動抓出所有的商品資訊囉！</p><h1>轉換成抓取變動目標的語法</h1><p>簡單整理一下，我們在第一段的輸入是某個商品分類的編號，回傳的是該分類下的所有商品連結。<br>而第二段則是輸入商品的連結，自動幫我們抓出商品的各項資訊。<br>因此我們要透過迴圈，逐一地抓出(第二段語法)所有商品(第一段的產出)資訊</p><p>定義ProdList函數，輸入商品分類的編號，回傳該分類下的商品連結清單<br><img src="/2019/04/07/Crawl-SongGuo/10.JPG" alt="10"></p><p>定義Crawl_SongGuo函數，輸入商品的連結，回傳商品的資訊<br><img src="/2019/04/07/Crawl-SongGuo/11.JPG" alt="11"></p><p>結果以上兩個函數，輸入商品分類的編號，抓取商品的各項屬性，並放在df中<br><img src="/2019/04/07/Crawl-SongGuo/12.JPG" alt="12"></p><blockquote><p>這裡會輸出的商品編號的原因是，我在Crawl_SongGuo函數中刻意加入print()指令，目的是方便我們追蹤程式是否正常執行。</p></blockquote><p>系統執行的效率非常快，不到1分鐘就執行完畢了，我們來呼叫df看一下結果吧！<br><img src="/2019/04/07/Crawl-SongGuo/13.JPG" alt="13"><br>因為畫面的限制，只顯示出第一筆資料，不過我們確定資料已經以DataFrame的格式抓下來囉！<br>接著我們嘗試把資料存成excel來檢視吧！</p><h1>保存資料</h1><p><img src="/2019/04/07/Crawl-SongGuo/14.JPG" alt="14"><br><img src="/2019/04/07/Crawl-SongGuo/15.JPG" alt="15"></p><p>以上次這個爬蟲的說明，有問題可以在以下留言區提問~</p><h1>完整程式待碼</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 載入相關套件</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests_html <span class="keyword">import</span> HTML</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 輸入爬蟲網址與使用者資訊</span></span><br><span class="line">url = <span class="string">'https://www.pcone.com.tw/product/'</span></span><br><span class="line"><span class="comment"># 男生服飾</span></span><br><span class="line">info = <span class="string">'327'</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 加入使用者資訊(如使用什麼瀏覽器、作業系統...等資訊)模擬真實瀏覽網頁的情況</span></span><br><span class="line">headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視是否成功抓到資料</span></span><br><span class="line">resp = requests.get(url + info, headers=headers)  </span><br><span class="line">html = HTML(html=resp.text)</span><br><span class="line">a = html.find(<span class="string">'a.product-list-item'</span>)</span><br><span class="line">a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挑選第一筆資料作為範例</span></span><br><span class="line">resp = requests.get(<span class="string">'https://www.pcone.com.tw/'</span> + a[<span class="number">0</span>].attrs[<span class="string">'href'</span>], headers=headers)</span><br><span class="line">html = HTML(html=resp.text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 店家名稱</span></span><br><span class="line">html.find(<span class="string">'a.store-name'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 店家商品數量</span></span><br><span class="line">html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].attrs[<span class="string">'data-val'</span>]</span><br><span class="line"><span class="comment"># 店家評價</span></span><br><span class="line">html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].attrs[<span class="string">'data-val'</span>]</span><br><span class="line"><span class="comment"># 店家出貨天數</span></span><br><span class="line">html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">2</span>].attrs[<span class="string">'data-val'</span>]</span><br><span class="line"><span class="comment"># 店家回覆率</span></span><br><span class="line">html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">3</span>].attrs[<span class="string">'data-val'</span>]</span><br><span class="line"><span class="comment"># 產品名稱</span></span><br><span class="line">html.find(<span class="string">'h1.product-name'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 特價</span></span><br><span class="line">html.find(<span class="string">'span.bind-lowest-price.discount'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 原價</span></span><br><span class="line">html.find(<span class="string">'span.original'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 折數</span></span><br><span class="line">html.find(<span class="string">'span.bind-discount-number.discount-number'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 商品評分</span></span><br><span class="line">html.find(<span class="string">'span.count &gt; span'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment"># 評價人數</span></span><br><span class="line">html.find(<span class="string">'span.count &gt; span'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].text</span><br><span class="line"><span class="comment"># 收藏人數</span></span><br><span class="line">html.find(<span class="string">'div.count'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].text</span><br><span class="line"><span class="comment"># 提問人數</span></span><br><span class="line">html.find(<span class="string">'div.count'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].text</span><br><span class="line"><span class="comment"># 商品分類</span></span><br><span class="line">html.find(<span class="string">'div.breadcrumbs-set'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 商品標籤</span></span><br><span class="line">html.find(<span class="string">'div.tags'</span>,first = <span class="keyword">True</span>).text</span><br><span class="line"><span class="comment"># 商品連結</span></span><br><span class="line"><span class="string">'https://www.pcone.com.tw'</span> + a[<span class="number">0</span>].attrs[<span class="string">'href'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定義ProdList函數，輸入商品分類編號，輸出該分類下所有商品連結</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ProdList</span><span class="params">(info)</span>:</span></span><br><span class="line">    resp = requests.get(url + str(info), headers=headers)</span><br><span class="line">    html = HTML(html=resp.text)</span><br><span class="line">    <span class="keyword">return</span>(html.find(<span class="string">'a.product-list-item'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定義Crawl_SongGuo函數，輸入商品網址，輸出該商品的各項屬性</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Crawl_SongGuo</span><span class="params">(info)</span>:</span></span><br><span class="line">    resp = requests.get(<span class="string">'https://www.pcone.com.tw/product/info/'</span> + re.search(<span class="string">r'\d&#123;12&#125;'</span>,str(info)).group(), headers=headers)</span><br><span class="line">    html = HTML(html=resp.text)</span><br><span class="line">    print(re.search(<span class="string">r'\d&#123;12&#125;'</span>,str(info)).group())</span><br><span class="line">    <span class="keyword">return</span>(pd.DataFrame(</span><br><span class="line">            data=[&#123;</span><br><span class="line">                <span class="string">'店家名稱'</span>:html.find(<span class="string">'a.store-name'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'店家商品數量'</span>:html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].attrs[<span class="string">'data-val'</span>],</span><br><span class="line">                <span class="string">'店家評價'</span>:html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].attrs[<span class="string">'data-val'</span>],</span><br><span class="line">                <span class="string">'店家出貨天數'</span>:html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">2</span>].attrs[<span class="string">'data-val'</span>],</span><br><span class="line">                <span class="string">'店家回覆率'</span>:html.find(<span class="string">'div.store-val'</span>,first = <span class="keyword">False</span>)[<span class="number">3</span>].attrs[<span class="string">'data-val'</span>],</span><br><span class="line">                <span class="string">'產品名稱'</span>:html.find(<span class="string">'h1.product-name'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'特價'</span>:html.find(<span class="string">'span.bind-lowest-price.discount'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'原價'</span>:html.find(<span class="string">'span.original'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'折數'</span>:html.find(<span class="string">'span.bind-discount-number.discount-number'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'商品評分'</span>:html.find(<span class="string">'span.count &gt; span'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].text,</span><br><span class="line">                <span class="string">'評價人數'</span>:html.find(<span class="string">'span.count &gt; span'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].text,</span><br><span class="line">                <span class="string">'收藏人數'</span>:html.find(<span class="string">'div.count'</span>,first = <span class="keyword">False</span>)[<span class="number">0</span>].text,</span><br><span class="line">                <span class="string">'提問人數'</span>:html.find(<span class="string">'div.count'</span>,first = <span class="keyword">False</span>)[<span class="number">1</span>].text,</span><br><span class="line">                <span class="string">'商品分類'</span>:html.find(<span class="string">'div.breadcrumbs-set'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'商品標籤'</span>:html.find(<span class="string">'div.tags'</span>,first = <span class="keyword">True</span>).text,</span><br><span class="line">                <span class="string">'連結'</span>:<span class="string">'https://www.pcone.com.tw/product/info/'</span> + re.search(<span class="string">r'\d&#123;12&#125;'</span>,str(info)).group()&#125;],</span><br><span class="line">            columns = [<span class="string">'店家名稱'</span>, <span class="string">'店家商品數量'</span>, <span class="string">'店家評價'</span>, <span class="string">'店家出貨天數'</span>, <span class="string">'店家回覆率'</span>,  <span class="string">'產品名稱'</span>, <span class="string">'特價'</span>, <span class="string">'原價'</span>, <span class="string">'折數'</span>,</span><br><span class="line">                       <span class="string">'商品評分'</span>, <span class="string">'評價人數'</span>, <span class="string">'收藏人數'</span>,<span class="string">'提問人數'</span>, <span class="string">'商品分類'</span>, <span class="string">'商品標籤'</span>, <span class="string">'連結'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 組合以上兩個函數，輸入商品分類的編號，即自動爬出所有商品的屬性，並將資料存在df中</span></span><br><span class="line">prodlist = ProdList(<span class="number">327</span>)</span><br><span class="line">df = pd.DataFrame()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(prodlist)):</span><br><span class="line">    df = df.append(Crawl_SongGuo(prodlist[i]), ignore_index=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視抓下來的資料</span></span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將df轉成excel並存在桌面上</span></span><br><span class="line">df.to_excel(<span class="string">'C:/Users/TLYu0419/Desktop/SongGuo.xlsx'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 爬蟲(Crawl) </tag>
            
            <tag> python </tag>
            
            <tag> SongGuo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬蟲 - 爬取Dcard文章</title>
      <link href="/2019/04/06/Crawl-Dcard/"/>
      <url>/2019/04/06/Crawl-Dcard/</url>
      <content type="html"><![CDATA[<p><a href="(https://www.dcard.tw/f)">Dcard</a>是非常適合練習爬蟲的網站，<br>除了Dcard台灣熱門的社群網站之外，Dcard也提供了非常便利的API讓我們能從網站上爬下文章。<br>在這篇文章中，我將展示如何透過python爬下Dcard上的文章！</p><a id="more"></a><p>這邊文章的架構如下</p><ul><li>抓取一篇Dcard的文章<br>具體項目如下：編號 / 標題 / 引言 / 內容 / 發布時間 / 更新時間…等等</li><li>一次爬100篇Dcard文章<br>透過系統提供的api，一次抓取100篇熱門文章</li><li>爬超過100篇Dcard文章<br>因為API限制一次最多100篇，在這裡我們透過簡單的迴圈一次爬1000篇文章。</li></ul><p>在這裡我們先練習爬文章內容的方法，若想進一步爬文章底下留言的人，可以參考補充資料中的範例，以下我們就開始練習吧！</p><p>補充資料：<a href="https://medium.com/pyladies-taiwan/%E7%88%AC%E8%9F%B2-%E5%BE%9Edcard%E7%B6%B2%E7%AB%99%E7%9C%8B%E7%88%AC%E8%9F%B2%E5%85%A5%E9%96%80-iii-ded52759d922" target="_blank" rel="noopener">爬蟲-從dcard網站看爬蟲入門-iii</a></p><h1>抓取一篇Dcard的文章</h1><p>我們先隨機挑選一篇Dcard上的文章作為練習，我挑選到的是這篇文章<a href="https://www.dcard.tw/f/funny/p/231030181" target="_blank" rel="noopener">警察閃光get</a>。</p><p>文章在Chrome上的畫面如下<br><img src="/2019/04/06/Crawl-Dcard/01.JPG" alt="01"><br>從網址列中可以看到這篇文章的編號是231030181，因此我們稍後會透過這個編號來爬這篇文章</p><p>首先我們先載入需要使用到的套件<br><img src="/2019/04/06/Crawl-Dcard/02.JPG" alt="02"><br>將這篇文章的編號透過quest套件讀取，並檢視抓下來資料的結構</p><p><img src="/2019/04/06/Crawl-Dcard/03.JPG" alt="03"><br>透過比對網站顯示的內容與上面輸出的資料結構後，我們可以從中發現id即為文章的編號, title是標題, conten則是內容，其他欄位的說明如下表：</p><table><thead><tr><th style="text-align:left">欄位</th><th style="text-align:center">說明</th><th style="text-align:left">備註</th></tr></thead><tbody><tr><td style="text-align:left">ID</td><td style="text-align:center">編號</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">title</td><td style="text-align:center">標題</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">content</td><td style="text-align:center">內容</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">excerpt</td><td style="text-align:center">摘要</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">createdAt</td><td style="text-align:center">發布時間</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">updatedAt</td><td style="text-align:center">更新時間</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">commentCount</td><td style="text-align:center">留言數</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">forumName</td><td style="text-align:center">分類</td><td style="text-align:left">中文</td></tr><tr><td style="text-align:left">forumAlias</td><td style="text-align:center">分類</td><td style="text-align:left">英文</td></tr><tr><td style="text-align:left">gender</td><td style="text-align:center">性別</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">likeCount</td><td style="text-align:center">心情數量</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">reactions</td><td style="text-align:center">心情細項</td><td style="text-align:left">把以上心情細分為「愛心」、「哈哈」、「跪」、「森77」、「驚訝」等類型</td></tr><tr><td style="text-align:left">topics</td><td style="text-align:center">標籤</td><td style="text-align:left"></td></tr></tbody></table><blockquote><p>在上表中的心情數量是各種心情數量的加總，若想進一步分析各種心情，可以再從reactions欄位提取。</p></blockquote><p>我們來嘗試把資料轉換為DataFrame吧！</p><p><img src="/2019/04/06/Crawl-Dcard/04.JPG" alt="04"></p><p>確認可以透過程式把文章爬下來之後，我們就來寫個簡單的Crawl函數，期望只需要輸入文章的ID後，就回傳爬下來的文章內容！</p><p><img src="/2019/04/06/Crawl-Dcard/05.JPG" alt="05"></p><p>接著我們就透過Crawl來爬文章吧！<br><img src="/2019/04/06/Crawl-Dcard/06.JPG" alt="06"><br>Good!</p><p>確認函數能正常執行!</p><h1>一次爬100篇Dcard文章</h1><p>在這邊我使用dcard提供便利的API，讓我們可以直接快速爬取資料<br><a href="https://www.dcard.tw/_api/posts?popular=true&amp;limit=100" target="_blank" rel="noopener">dcard API</a><br>以下簡單說明這個網址</p><ul><li>popular參數：若設定為true，表示按照熱門程度排序，若設定為false，則按照發布時間排序</li><li>limit參數：限定在0-100的數值，表示要抓多少文章</li></ul><p><a href="https://www.dcard.tw/_api/posts?popular=true&amp;limit=100" target="_blank" rel="noopener">https://www.dcard.tw/_api/posts?popular=true&amp;limit=100</a></p><p><img src="/2019/04/06/Crawl-Dcard/07.JPG" alt="07"></p><h1>爬超過100篇Dcard文章</h1><p>由於API限制最多載入100篇文章，如果我們想要爬更多資料，可以透過before參數與迴圈進行!<br><br>before參數後面是接文章的ID，讓我們可以抓取某篇文章之前的資料<br><br>而透過迴圈，我們只需要把之前抓到最後一篇文章的ID放入before參數中，我們就可以抓到這篇文章的前100篇文章。<br><img src="/2019/04/06/Crawl-Dcard/08.JPG" alt="08"></p><h1>保存資料</h1><p>將資料轉換為excel保存到桌面<br><img src="/2019/04/06/Crawl-Dcard/09.JPG" alt="09"><br>用excel檢視抓下來的資料<br><img src="/2019/04/06/Crawl-Dcard/10.JPG" alt="10"></p><h1>完整的程式代碼</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 載入使用的套件</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> requests_html <span class="keyword">import</span> HTML</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 檢視資料結構</span></span><br><span class="line">ID = <span class="string">'231030181'</span></span><br><span class="line">url = <span class="string">'https://www.dcard.tw/_api/posts/'</span> + ID</span><br><span class="line"><span class="comment"># 透過request套件抓下這個網址的資料</span></span><br><span class="line">requ = requests.get(url)</span><br><span class="line"><span class="comment"># 初步檢視抓到的資料結構</span></span><br><span class="line">requ.json()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將抓下來的資料轉為DataFrame</span></span><br><span class="line">ID = <span class="string">'231030181'</span></span><br><span class="line">url = url = <span class="string">'https://www.dcard.tw/_api/posts/'</span> + ID</span><br><span class="line">requ = requests.get(url)</span><br><span class="line">rejs = requ.json()</span><br><span class="line">pd.DataFrame(</span><br><span class="line">    data=</span><br><span class="line">    [&#123;<span class="string">'ID'</span>:rejs[<span class="string">'id'</span>],</span><br><span class="line">      <span class="string">'title'</span>:rejs[<span class="string">'title'</span>],</span><br><span class="line">      <span class="string">'content'</span>:rejs[<span class="string">'content'</span>],</span><br><span class="line">      <span class="string">'excerpt'</span>:rejs[<span class="string">'excerpt'</span>],</span><br><span class="line">      <span class="string">'createdAt'</span>:rejs[<span class="string">'createdAt'</span>],</span><br><span class="line">      <span class="string">'updatedAt'</span>:rejs[<span class="string">'updatedAt'</span>],</span><br><span class="line">      <span class="string">'commentCount'</span>:rejs[<span class="string">'commentCount'</span>],</span><br><span class="line">      <span class="string">'forumName'</span>:rejs[<span class="string">'forumName'</span>],</span><br><span class="line">      <span class="string">'forumAlias'</span>:rejs[<span class="string">'forumAlias'</span>],</span><br><span class="line">      <span class="string">'gender'</span>:rejs[<span class="string">'gender'</span>],</span><br><span class="line">      <span class="string">'likeCount'</span>:rejs[<span class="string">'likeCount'</span>],</span><br><span class="line">      <span class="string">'reactions'</span>:rejs[<span class="string">'reactions'</span>],</span><br><span class="line">      <span class="string">'topics'</span>:rejs[<span class="string">'topics'</span>]&#125;],</span><br><span class="line">    columns=[<span class="string">'ID'</span>,<span class="string">'title'</span>,<span class="string">'content'</span>,<span class="string">'excerpt'</span>,<span class="string">'createdAt'</span>,<span class="string">'updatedAt'</span>,<span class="string">'commentCount'</span>,<span class="string">'forumName'</span>,<span class="string">'forumAlias'</span>,<span class="string">'gender'</span>,<span class="string">'likeCount'</span>,<span class="string">'reactions'</span>,<span class="string">'topics'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 撰寫簡單的函數，透過輸入文章ID，就輸出文章的資料</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Crawl</span><span class="params">(ID)</span>:</span></span><br><span class="line">    link = <span class="string">'https://www.dcard.tw/_api/posts/'</span> + str(ID)</span><br><span class="line">    requ = requests.get(link)</span><br><span class="line">    rejs = requ.json()</span><br><span class="line">    <span class="keyword">return</span>(pd.DataFrame(</span><br><span class="line">        data=</span><br><span class="line">        [&#123;<span class="string">'ID'</span>:rejs[<span class="string">'id'</span>],</span><br><span class="line">          <span class="string">'title'</span>:rejs[<span class="string">'title'</span>],</span><br><span class="line">          <span class="string">'content'</span>:rejs[<span class="string">'content'</span>],</span><br><span class="line">          <span class="string">'excerpt'</span>:rejs[<span class="string">'excerpt'</span>],</span><br><span class="line">          <span class="string">'createdAt'</span>:rejs[<span class="string">'createdAt'</span>],</span><br><span class="line">          <span class="string">'updatedAt'</span>:rejs[<span class="string">'updatedAt'</span>],</span><br><span class="line">          <span class="string">'commentCount'</span>:rejs[<span class="string">'commentCount'</span>],</span><br><span class="line">          <span class="string">'forumName'</span>:rejs[<span class="string">'forumName'</span>],</span><br><span class="line">          <span class="string">'forumAlias'</span>:rejs[<span class="string">'forumAlias'</span>],</span><br><span class="line">          <span class="string">'gender'</span>:rejs[<span class="string">'gender'</span>],</span><br><span class="line">          <span class="string">'likeCount'</span>:rejs[<span class="string">'likeCount'</span>],</span><br><span class="line">          <span class="string">'reactions'</span>:rejs[<span class="string">'reactions'</span>],</span><br><span class="line">          <span class="string">'topics'</span>:rejs[<span class="string">'topics'</span>]&#125;],</span><br><span class="line">        columns=[<span class="string">'ID'</span>,<span class="string">'title'</span>,<span class="string">'content'</span>,<span class="string">'excerpt'</span>,<span class="string">'createdAt'</span>,<span class="string">'updatedAt'</span>,<span class="string">'commentCount'</span>,<span class="string">'forumName'</span>,<span class="string">'forumAlias'</span>,<span class="string">'gender'</span>,<span class="string">'likeCount'</span>,<span class="string">'reactions'</span>,<span class="string">'topics'</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 嘗試使用撰寫出的函數，抓取編號231030181的文章</span></span><br><span class="line">Crawl(<span class="number">231030181</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一次讀取100篇最熱門的文章</span></span><br><span class="line">url = <span class="string">'https://www.dcard.tw/_api/posts?popular=true&amp;limit=100'</span></span><br><span class="line">resq = requests.get(url)</span><br><span class="line">rejs = resq.json()</span><br><span class="line">df = pd.DataFrame()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(rejs)):</span><br><span class="line">    df = df.append(Crawl(rejs[i][<span class="string">'id'</span>]),ignore_index=<span class="keyword">True</span>)</span><br><span class="line">print(df.shape)</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment"># 透過迴圈讀取10*100篇文章，若需讀取更多資料，可以將range(10)中的數值提升</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    last = str(int(df.tail(<span class="number">1</span>).ID)) <span class="comment"># 找出爬出資料的最後一筆ID</span></span><br><span class="line">    url = <span class="string">'https://www.dcard.tw/_api/posts?popular=true&amp;limit=100&amp;before='</span> + last</span><br><span class="line">    resq = requests.get(url)</span><br><span class="line">    rejs = resq.json()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(rejs)):</span><br><span class="line">        df = df.append(Crawl(rejs[i][<span class="string">'id'</span>]), ignore_index=<span class="keyword">True</span>)</span><br><span class="line">print(df.shape)</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line"><span class="comment"># 將資料存到桌面</span></span><br><span class="line">df.to_excel(<span class="string">'C:/Users/TLYu0419/Desktop/Dcard.xlsx'</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 爬蟲(Crawl) </tag>
            
            <tag> Dcard </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>猜數字遊戲</title>
      <link href="/2018/12/30/GuessNumber/"/>
      <url>/2018/12/30/GuessNumber/</url>
      <content type="html"><![CDATA[<p>這是運用while迴圈和if else的判斷式寫的一個簡單的猜數字遊戲。<br>透過提示使用者猜大一點、猜小一點來引導使用者找到正確的答案！</p><a id="more"></a><h1>流程說明</h1><p>首先會從1到100的數值中隨機生成一個數值作為答案。<br>接著請使用者猜一個數字<br>- 如果大於答案，就會提示說：「太高囉，猜低一點！」<br>- 如果小於答案，則會提示說「太低囉，猜高一點！」<br>- 一直到猜到正確的答案後，跳出「恭喜答對囉！」的宣告語並結束這個迴圈。</p><h1>Python 的程式代碼如下</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import numpy as np</span><br><span class="line">random = np.random.randint(1,100)</span><br><span class="line">condiction = False</span><br><span class="line">while condiction == False: # 符合條件就執行迴圈</span><br><span class="line">    guess = int(input(&quot;猜個數字吧 &gt;&gt;&quot;))</span><br><span class="line">    if guess &gt; random:</span><br><span class="line">        print(&quot;太高囉，猜低一點！&quot;)</span><br><span class="line">    elif guess &lt; random:</span><br><span class="line">        print(&quot;太低囉，猜高一點！)</span><br><span class="line">    else:</span><br><span class="line">        print(&quot;恭喜答對囉!&quot;)</span><br><span class="line">        condiction = True # 答對後，將繼續執行的條件改為False</span><br></pre></td></tr></table></figure><h1>使用畫面</h1><p><img src="/2018/12/30/GuessNumber/guess.JPG" alt="guess"></p>]]></content>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 迴圈 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>台灣的文化品味如何？階級與音樂品味的多變量分析</title>
      <link href="/2018/09/29/Taste-Cluster/"/>
      <url>/2018/09/29/Taste-Cluster/</url>
      <content type="html"><![CDATA[<p>這邊文章是從我的碩士論文「<a href="https://hdl.handle.net/11296/tu5y5c" target="_blank" rel="noopener">重新檢視文化資本對台灣社會階層區辨的有效性</a>」的資料修改而來，並與東華大學的莊致嘉老師以「<a href="http://www.edubook.com.tw/OAtw/File/PDf/406283.pdf" target="_blank" rel="noopener">反省文化資本理論在臺灣的有效性：文化品味、教育和階級的關聯性及其變遷</a>」共同發表在台灣教育社會學研究期刊上。有興趣的人可以透過以上連結檢視文化品為與社會階層之間的關聯性與其理論意義。在此僅分享研究流程的代碼留作紀錄。</p><a id="more"></a><ul><li><a href="#%E8%B3%87%E6%96%99%E4%BE%86%E6%BA%90">資料來源</a></li><li><a href="#%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B">分析流程</a></li><li><a href="#%E8%B3%87%E6%96%99%E6%B8%85%E7%90%86">資料清理</a></li><li><a href="#%E7%B5%B1%E8%A8%88%E5%88%86%E7%BE%A4">統計分群</a></li><li><a href="#%E5%A4%9A%E9%A0%85%E9%82%8F%E8%BC%AF%E8%BF%B4%E6%AD%B8">多項邏輯迴歸</a></li><li><a href="#%E7%B8%BD%E7%B5%90">總結</a></li></ul><h1>資料來源</h1><p>這次使用的資料是來自中央研究院的<a href="http://www.ios.sinica.edu.tw/sc/cht/home.php" target="_blank" rel="noopener">台灣社會變遷調查</a>資料庫中2007年的<a href="http://www.ios.sinica.edu.tw/sc/cht/download.php?fn=tscs071.pdf" target="_blank" rel="noopener">社會階層組的調查問卷</a>的資料進行分析。這是份公開的資料，對於想要再製或再進一步深入研究的人來說是非常棒的資料源。</p><h1>分析流程</h1><p>這次的分析會從原始資料中提取部分變來探討階級與品味間的關聯性，如下表的說明，a1到f1是我使用的解釋變數，並且我將透過g3a到g3i題組（受訪者消費各種音樂頻率）來提取文化品味的分群結果。讓每位受訪者都有自己的一種文化品味偏好的標籤。最後我會運用解釋變數來解釋文化品味的差異，找出階級與品味之間的關聯性。</p><style> table th:nth-of-type(1) { width: 10px; } </style><style> table th:nth-of-type(2) { width: 90px; } </style><table><thead><tr><th style="text-align:left">代碼</th><th style="text-align:left">變項名稱</th><th style="text-align:left">說明</th></tr></thead><tbody><tr><td style="text-align:left">a1</td><td style="text-align:left">性別</td><td style="text-align:left">分為男性和女性，以女性為對照組</td></tr><tr><td style="text-align:left">age</td><td style="text-align:left">年齡</td><td style="text-align:left">調查時受訪者的年齡</td></tr><tr><td style="text-align:left">c1</td><td style="text-align:left">教育程度</td><td style="text-align:left">分為國小、國中…碩士、博士等22個類別，在此轉換為對應的教育年數</td></tr><tr><td style="text-align:left">c8</td><td style="text-align:left">父親教育</td><td style="text-align:left">同c1題項的處理方式</td></tr><tr><td style="text-align:left">d2b3r</td><td style="text-align:left">父親職位</td><td style="text-align:left">受訪者15歲時父親的職業地位分數，轉換的標準是按照黃毅志(2008)的研究進行轉換</td></tr><tr><td style="text-align:left">f1</td><td style="text-align:left">主觀地位</td><td style="text-align:left">請受訪者從1到10分中挑選符合自己社會地位的分數</td></tr><tr><td style="text-align:left">g3a</td><td style="text-align:left">台語流行歌</td><td style="text-align:left">詢問受訪者常不常聽台語流行歌，分為從不、很少、有時、經常等四類</td></tr><tr><td style="text-align:left">g3b</td><td style="text-align:left">國語流行歌</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3c</td><td style="text-align:left">日本流行歌</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3d</td><td style="text-align:left">西洋流行歌</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3e</td><td style="text-align:left">古典音樂</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3f</td><td style="text-align:left">國樂</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3g</td><td style="text-align:left">平劇</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3h</td><td style="text-align:left">歌仔戲</td><td style="text-align:left">同g3a題項的分類方式</td></tr><tr><td style="text-align:left">g3i</td><td style="text-align:left">布袋戲</td><td style="text-align:left">同g3a題項的分類方式</td></tr></tbody></table><h1>資料清理</h1><p>載入使用套件，並按照上表清理資料。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">library(tidyverse)</span><br><span class="line">library(magrittr)</span><br><span class="line">library(foreign)</span><br><span class="line">library(PCAmixdata)</span><br><span class="line">library(nnet)</span><br><span class="line">library(DescTools)</span><br><span class="line">library(stargazer)</span><br><span class="line">library(fpc)</span><br></pre></td></tr></table></figure><p>按照上表的說明整理資料。由於資料處理的過程比較繁雜，在此僅列出程式碼提供參考，有興趣的讀者請自行檢視。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">tscs2007 &lt;- </span><br><span class="line">  # 從中研院社會變遷調查資料庫下載資料</span><br><span class="line">  read.spss(file = &quot;https://www.ios.sinica.edu.tw/sc/cht/datafile/tscs071.sav&quot;, </span><br><span class="line">                      use.value.labels = F, </span><br><span class="line">                      to.data.frame = T) %&gt;%</span><br><span class="line">  # 按照上表挑選分析所需之變項</span><br><span class="line">  select(a1, age, c1, c8, d2b3_r, f1, g3a:g3i) %&gt;% </span><br><span class="line">  mutate(</span><br><span class="line">    # 將性別轉換為虛擬變項，女性為對照組</span><br><span class="line">    a1 = case_when( </span><br><span class="line">      grepl(&quot;1&quot;, a1) ~ 1,</span><br><span class="line">      grepl(&quot;2&quot;, a1) ~ 0),</span><br><span class="line">    # 將父親的職業類別按黃毅志(2008)的研究轉換為對應的社經地位分數</span><br><span class="line">    d2b3_r = case_when( </span><br><span class="line">      grepl(&quot;110&quot;, d2b3_r) ~ 83.3,</span><br><span class="line">      grepl(&quot;120|130|140&quot;, d2b3_r) ~ 81.4,</span><br><span class="line">      grepl(&quot;201&quot;, d2b3_r) ~ 87.9,</span><br><span class="line">      grepl(&quot;202&quot;, d2b3_r) ~ 81.1,</span><br><span class="line">      grepl(&quot;211|221&quot;, d2b3_r) ~ 86.0,</span><br><span class="line">      grepl(&quot;212|213|214&quot;, d2b3_r) ~ 80.0,</span><br><span class="line">      grepl(&quot;222|223&quot;, d2b3_r) ~ 79.1,</span><br><span class="line">      grepl(&quot;230&quot;, d2b3_r) ~ 85.1,</span><br><span class="line">      grepl(&quot;250&quot;, d2b3_r) ~ 83.2,</span><br><span class="line">      grepl(&quot;301|302|303&quot;, d2b3_r) ~ 78.4,</span><br><span class="line">      grepl(&quot;311&quot;, d2b3_r) ~ 80.1,</span><br><span class="line">      grepl(&quot;312|314&quot;, d2b3_r) ~ 74.5,</span><br><span class="line">      grepl(&quot;313&quot;, d2b3_r) ~ 78.1,</span><br><span class="line">      grepl(&quot;321|322|340&quot;, d2b3_r) ~ 77.5,</span><br><span class="line">      grepl(&quot;331&quot;, d2b3_r) ~ 78.8,</span><br><span class="line">      grepl(&quot;332&quot;, d2b3_r) ~ 77.2,</span><br><span class="line">      grepl(&quot;350|360&quot;, d2b3_r) ~ 80.1,</span><br><span class="line">      grepl(&quot;370&quot;, d2b3_r) ~ 81.9,</span><br><span class="line">      grepl(&quot;410&quot;, d2b3_r) ~ 76.5,</span><br><span class="line">      grepl(&quot;420|511&quot;, d2b3_r) ~ 74.3,</span><br><span class="line">      grepl(&quot;431&quot;, d2b3_r) ~ 76.0,</span><br><span class="line">      grepl(&quot;432&quot;, d2b3_r) ~ 76.7,</span><br><span class="line">      grepl(&quot;512|514&quot;, d2b3_r) ~ 66.8,</span><br><span class="line">      grepl(&quot;513&quot;, d2b3_r) ~ 68.9,</span><br><span class="line">      grepl(&quot;515|516&quot;, d2b3_r) ~ 73.1,</span><br><span class="line">      grepl(&quot;520&quot;, d2b3_r) ~ 76.9,</span><br><span class="line">      grepl(&quot;531&quot;, d2b3_r) ~ 71.8,</span><br><span class="line">      grepl(&quot;532&quot;, d2b3_r) ~ 67.3,</span><br><span class="line">      grepl(&quot;610&quot;, d2b3_r) ~ 66.0,</span><br><span class="line">      grepl(&quot;620&quot;, d2b3_r) ~ 65.9,</span><br><span class="line">      grepl(&quot;710&quot;, d2b3_r) ~ 72.0,</span><br><span class="line">      grepl(&quot;720&quot;, d2b3_r) ~ 74.2,</span><br><span class="line">      grepl(&quot;790&quot;, d2b3_r) ~ 71.1,</span><br><span class="line">      grepl(&quot;810|840&quot;, d2b3_r) ~ 70.7,</span><br><span class="line">      grepl(&quot;820&quot;, d2b3_r) ~ 70.8,</span><br><span class="line">      grepl(&quot;830&quot;, d2b3_r) ~ 69.4,</span><br><span class="line">      grepl(&quot;910&quot;, d2b3_r) ~ 66.1,</span><br><span class="line">      grepl(&quot;920&quot;, d2b3_r) ~ 71.0,</span><br><span class="line">      grepl(&quot;930&quot;, d2b3_r) ~ 65.7,</span><br><span class="line">      grepl(&quot;940&quot;, d2b3_r) ~ 64.5,</span><br><span class="line">      grepl(&quot;950&quot;, d2b3_r) ~ 64.6,</span><br><span class="line">      grepl(&quot;960&quot;, d2b3_r) ~ 69.6),</span><br><span class="line">    # 主觀地位分數</span><br><span class="line">    f1 = case_when(between(f1, 1, 10) ~ f1)) %&gt;% </span><br><span class="line">  mutate_at(</span><br><span class="line">     # 教育程度轉換為相對應的教育年數</span><br><span class="line">    vars(c1,c8),</span><br><span class="line">    funs(case_when(</span><br><span class="line">      . == 1 ~ 0, </span><br><span class="line">      . == 2 ~ 3,</span><br><span class="line">      . == 3 ~ 6,</span><br><span class="line">      between(., 4, 5) ~ 9 ,</span><br><span class="line">      between(., 6, 9) ~ 12 ,</span><br><span class="line">      between(., 10, 15) ~ 14 ,</span><br><span class="line">      between(., 16, 19) ~ 16 ,</span><br><span class="line">      . == 20 ~ 18,</span><br><span class="line">      . == 21 ~ 22)))%&gt;%</span><br><span class="line">  mutate_at(</span><br><span class="line">    # 將文化品味的題組，從「經常」到「從不」分別給予4到1分</span><br><span class="line">    vars(g3a,g3b,g3c,g3d,g3e,g3f,g3g,g3h,g3i), </span><br><span class="line">    funs(case_when(</span><br><span class="line">      . == 1 ~ 4,</span><br><span class="line">      . == 2 ~ 3,</span><br><span class="line">      . == 3 ~ 2,</span><br><span class="line">      . == 4 ~ 1)))%&gt;%</span><br><span class="line">  # 排除遺漏值</span><br><span class="line">  na.omit(.)</span><br></pre></td></tr></table></figure><h1>統計分群</h1><p>由於文化品味之間或多或少都會存在一些關聯性，並不適合直接進行k-medoids分群，在此我們會先透過主成分分析與因子轉軸<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>來排除變項間存在相關性的問題，接著再將提取出特徵值大於1的維度透過k-medoids進行統計分群。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">culture_PCA &lt;- </span><br><span class="line">  # 運用g3a到g3i等9項題目進行主成分分析</span><br><span class="line">  PCAmix(X.quanti = select(tscs2007, g3a:g3i), graph = F) %&gt;%</span><br><span class="line">  # 提取特徵值大於1的維度並進行轉軸</span><br><span class="line">  PCArot(dim=sum(.$eig[,1]&gt;=1), graph = F)</span><br><span class="line"></span><br><span class="line"># 檢視轉軸過後各維度的意義</span><br><span class="line">culture_PCA$sqload%&gt;%round(2)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">Var</th><th style="text-align:center">dim1.rot</th><th style="text-align:center">dim2.rot</th><th style="text-align:center">dim3.rot</th></tr></thead><tbody><tr><td style="text-align:left">g3a</td><td style="text-align:center">0.06</td><td style="text-align:center"><strong>0.42</strong></td><td style="text-align:center">0.20</td></tr><tr><td style="text-align:left">g3b</td><td style="text-align:center">0.00</td><td style="text-align:center">0.02</td><td style="text-align:center"><strong>0.71</strong></td></tr><tr><td style="text-align:left">g3c</td><td style="text-align:center">0.07</td><td style="text-align:center">0.00</td><td style="text-align:center"><strong>0.41</strong></td></tr><tr><td style="text-align:left">g3d</td><td style="text-align:center">0.12</td><td style="text-align:center">0.04</td><td style="text-align:center"><strong>0.55</strong></td></tr><tr><td style="text-align:left">g3e</td><td style="text-align:center"><strong>0.44</strong></td><td style="text-align:center">0.01</td><td style="text-align:center">0.19</td></tr><tr><td style="text-align:left">g3f</td><td style="text-align:center"><strong>0.62</strong></td><td style="text-align:center">0.04</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:left">g3g</td><td style="text-align:center"><strong>0.51</strong></td><td style="text-align:center">0.06</td><td style="text-align:center">0.00</td></tr><tr><td style="text-align:left">g3h</td><td style="text-align:center">0.09</td><td style="text-align:center"><strong>0.57</strong></td><td style="text-align:center">0.03</td></tr><tr><td style="text-align:left">g3i</td><td style="text-align:center">0.04</td><td style="text-align:center"><strong>0.54</strong></td><td style="text-align:center">0.00</td></tr></tbody></table><p>在這裡我將因子載荷係數大於0.3的項目用粗體標示，如果文化品味在該維度上的係數值越高，表示該維度反映越多的該文化品味的意義。而上表的結果顯示，維度1主要反映的是古典音樂(g3e)、國樂(g3f)、平劇(g3g)等項目，我將其命名為消費高雅文化的程度。維度2主要反映的是台語流行歌(g3a)、歌仔戲(g3h)、布袋戲(g3i)等題目，我將其命名為消費傳統文化的程度。維度3主要反映的是國語流行歌(g3b)、日本流行歌(g3c)、西洋流行歌(g3d)等題目，我將其命名為消費流行文化的程度。</p><p>在排除了變數之間相關性的問題之後，我們接下來就運用k-medoids演算法對每位受訪者的文化品味進行分群。在此我使用的函數是fpc套件中的pamk函數，這個函數的優點是當我們在進行分群時，我們只需要輸入資料集與分群組數的範圍，系統就會幫我們把這個範圍內的分群組數都計算出來，並根據分成各群時的silhouette係數從中挑選最佳的分群結果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 將提取後的結果併回資料中</span><br><span class="line">tscs2007 %&lt;&gt;% </span><br><span class="line">  bind_cols(culture_PCA$ind$coord %&gt;% </span><br><span class="line">              as_tibble(.)) </span><br><span class="line"># 選擇提取出的三個維度進行分群</span><br><span class="line">set.seed(123)</span><br><span class="line">pamk.best &lt;- pamk(select(tscs2007, ends_with(&quot;rot&quot;)), </span><br><span class="line">                  # 從區分成2到10群的結果中找出最佳分群組數</span><br><span class="line">                  krange=2:10) </span><br><span class="line"># 將分群結果併回資料集</span><br><span class="line">tscs2007 %&lt;&gt;% mutate(cluster = pamk.best$pamobject$clustering) </span><br><span class="line"></span><br><span class="line">tscs2007 %&gt;% # 檢視分群結果</span><br><span class="line">  group_by(cluster)%&gt;%</span><br><span class="line">  select(ends_with(&quot;rot&quot;)) %&gt;%</span><br><span class="line">  summarise_all(funs(mean(.)))</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">cluster</th><th style="text-align:center">dim1.rot</th><th style="text-align:center">dim2.rot</th><th style="text-align:center">dim3.rot</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:center">-0.17</td><td style="text-align:center">-1.01</td><td style="text-align:center">1.30</td></tr><tr><td style="text-align:left">2</td><td style="text-align:center">-1.09</td><td style="text-align:center">1.03</td><td style="text-align:center">0.08</td></tr><tr><td style="text-align:left">3</td><td style="text-align:center">2.17</td><td style="text-align:center">0.70</td><td style="text-align:center">0.24</td></tr><tr><td style="text-align:left">4</td><td style="text-align:center">-0.26</td><td style="text-align:center">-0.85</td><td style="text-align:center">-1.74</td></tr></tbody></table><p>從以上的結果顯示，分群1只消費流行文化，但是在高雅文化與傳統文化的分數都是負值，我將這群人稱為「純流行」。分群2則偏好傳統文化與流行文化，(但流行文化的係數非常接近0)，並且不消費高雅文化，我將其稱為「純傳統」。分群三在每種文化品味上都有正面的偏好，其中最偏好高雅文化，另外在傳統、流行文化也會涉略，我將其稱為「雜食」。最後分群4則與分群3相反，對於每種音樂品味的偏好都是負值，我將其稱為「不聽音樂」。</p><h1>多項邏輯迴歸</h1><p>到目前為止我們已經從原始的9項音樂品味創造出一個「4分類的音樂品味」變項囉，這4分類分別是「純流行(popular)」、「純傳統(tradition)」、「雜食(omnivore)」與「不聽音樂(none)」的四個標籤。而這也就是我們後續分析的目標變數，接著我將運用受訪者的性別、年齡、教育年數、父親教育年數、主觀社會地位以及父親的階級來解釋文化品味。操作過程如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tscs2007 %&lt;&gt;%  </span><br><span class="line">  # 將解釋變數標準化</span><br><span class="line">  mutate_at(vars(a1, age, c1, c8, f1, d2b3_r),</span><br><span class="line">            funs(as.numeric(scale(.)))) %&gt;%</span><br><span class="line">  mutate(cluster = factor(cluster,c(1, 2, 3, 4), c(&quot;popular&quot;,&quot;tradition&quot;,&quot;omnivore&quot;,&quot;none&quot;)),</span><br><span class="line">         cluster = relevel(cluster, ref = &quot;omnivore&quot;))</span><br><span class="line"></span><br><span class="line">mlogist &lt;- multinom(cluster ~ a1 + age + c8+ d2b3_r + c1 + f1 , # 運用a1、age、c8、d2b3_r、c1、f1等變數解釋文化品味</span><br><span class="line">                    data = tscs2007)</span><br><span class="line"></span><br><span class="line">PseudoR2(mlogist, c(&quot;McFaddenAdj&quot;,&quot;CoxSnell&quot;, &quot;Nagelkerke&quot;, &quot;BIC&quot;, &quot;LogLik&quot;))</span><br><span class="line">stargazer(mlogist, type=&quot;text&quot;, out=&quot;multi1.htm&quot;,summary = T)</span><br></pre></td></tr></table></figure><p>輸出並整理以上的分析結果如下表</p><table><thead><tr><th style="text-align:left"></th><th style="text-align:center">Popular<br>vs.<br>omnivore</th><th style="text-align:center">Tradition<br>vs.<br>omnivore</th><th style="text-align:center">none<br>vs.<br>omnivore</th></tr></thead><tbody><tr><td style="text-align:left">性別</td><td style="text-align:center">0.039<br>(0.075)</td><td style="text-align:center">0.286***<br>(0.075)</td><td style="text-align:center">0.136*<br>(0.082)</td></tr><tr><td style="text-align:left">年齡</td><td style="text-align:center">-0.936***<br>(0.110)</td><td style="text-align:center">-0.445***<br>(0.103)</td><td style="text-align:center">0.072<br>(0.109)</td></tr><tr><td style="text-align:left">父親教育</td><td style="text-align:center">-0.172*<br>(0.104)</td><td style="text-align:center">-0.407***<br>(0.104)</td><td style="text-align:center">-0.471***<br>(0.113)</td></tr><tr><td style="text-align:left">父親職位</td><td style="text-align:center">0.118**<br>(0.088)</td><td style="text-align:center">0.002<br>(0.091)</td><td style="text-align:center">0.043<br>(0.100)</td></tr><tr><td style="text-align:left">教育年數</td><td style="text-align:center">0.075<br>(0.136)</td><td style="text-align:center">-1.085***<br>(0.125)</td><td style="text-align:center">-0.918***<br>(0.132)</td></tr><tr><td style="text-align:left">主觀地位</td><td style="text-align:center">0.002<br>(0.084)</td><td style="text-align:center">-0.115<br>(0.079)</td><td style="text-align:center">-0.321***<br>(0.086)</td></tr><tr><td style="text-align:left">常數</td><td style="text-align:center">-0.179*<br>(0.100)</td><td style="text-align:center">0.491***<br>(0.078)</td><td style="text-align:center">0.042<br>(0.088)</td></tr><tr><td style="text-align:left">PseudoR2</td><td style="text-align:center">0.150(McFaddenAdj)<br>0.353(CoxSnell)<br>0.377(Nagelkerke)</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>如上表，整體模型的PseudoR^2值為0.150(McFaddenAdj)、0.353(CoxSnell)與0.377(Nagelkerke)。首先在Popular vs. omnivore 的模型中，年齡與父親教育年數越高者容易成為雜食，而父親職業地位的增加則較容易成為純流行。其次在Tradition vs. omnivore的模型來看，男性較容易成為純傳統，而年齡、父親教育年數與教育年數的增加則較容易成為雜食。最後在none vs. omnivore的模型來看，男性較容易成為不聽音樂，而父親教育年數、教育年數與主觀地位的增加則較容易成為雜食。</p><p>整體來看，從文化品味的分群結果可以發現，文化品味並非如同源論的論述(各階級僅偏好屬於自己階級的文化)也非個人化論的論述(文化品味完全是屬於個人的偏好)，實際上台灣的文化品味較接近走在這兩個論點中間的雜食論，固然有一群消費者僅消費流行文化或傳統文化，然而也有消費各式各樣文化品味的群體以及都不消費任何文化活動的群體。並且我們從多項邏輯回歸中也發現在相關文獻中提到的個人特質(性別、年齡)、家庭背景(父親教育、父親地位)與代表個人的階級地位(教育年數、主觀地位)等都是影響文化品味的重要變數。</p><p>另外一項有趣的發現是同樣都是代表家庭背景的父親教育與父親職位有著截然不同的發現，如果研究者使用父親教育作為家庭背景的操作化指標，會發現父親教育越高越容易成為雜食者；然而若是使用父親職位作為操作化指標，則會發現父親職業地位越高受訪者較容易成為純流行。這會隨著受訪者採用不同的指標來測量家庭背景的概念會有不同的研究發現。</p><h1>總結</h1><p>這篇文章主要是從我的碩士論文修改而來，主要演示了一次運用PCA與PAM分群的方法提取潛在結構，將「多個文化品味的消費頻率」題項簡化為一個多分類的文化品味標籤。並將其作為目標變數，運用性別、年齡、教育程度、父親教育、父親職位等變項來建立多項邏輯回歸的模型的方法。<br>透過上述分析我們可以發現許多有意思的發現，如文化品味可以如何分群，以及文化品味與階級之間的關聯性又是如何。另外在原始資料中，除了測量音樂品味消費頻率的題項之外還有休閒品味、閱讀品味的消費頻率題項。有興趣的讀者可以修改上述的代碼，再進行一次以上分析，相信還會有許多有意思的發現！</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>需要留意的是，將順序尺度的資料當作等距尺度進行分析是存在統計上的疑慮的。實務上為了資料分析的方便性，我們仍然經常直接將這類資料進行當作等距資料進行加減、平均等等操作。若是追求精確、嚴謹的研究者，可以考慮運用<a href="https://www.jstatsoft.org/article/view/v031i04/v31i04.pdf" target="_blank" rel="noopener">homals套件</a>將順序尺度的資料轉換為等距尺度後，再進行後續的統計分析。 <a href="#fnref1" class="footnote-backref">↩</a></p></li></ol></section>]]></content>
      
      
        <tags>
            
            <tag> R programming language </tag>
            
            <tag> k-medoids cluster </tag>
            
            <tag> multinomial logistic regression </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
